import matplotlib.pyplot as plt
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.datasets import load_iris
from sklearn.metrics import accuracy_score
irisData = load_iris()
X = irisData.data
y = irisData.target
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=0)
n_neighbors = abs((len(y_test))**0.5)
if n_neighbors % 2 == 0:
 n_neighbors += 1
k_values = range(1, 21) 
accuracy_scores = []
for k in k_values:
 knn = KNeighborsClassifier(n_neighbors=k, metric='euclidean')
 knn.fit(X_train, y_train)
 Y_predict = knn.predict(X_test)
 accuracy = accuracy_score(y_test, Y_predict)
 accuracy_scores.append(accuracy)
# Plotting the results
plt.plot(k_values, accuracy_scores, marker='o')
plt.title('K-Nearest Neighbors Accuracy')
plt.xlabel('Number of Neighbors (k)')
plt.ylabel('Accuracy')
plt.grid(True)
plt.show()
